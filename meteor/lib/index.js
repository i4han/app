// Generated by CoffeeScript 1.8.0
var bigButton, calendar_size, date_box_size, fullscreen, fullsize, fym;

fym = 'YYYYMM';

date_box_size = 120;

calendar_size = date_box_size * 7 + 14;

fullsize = function() {
  return {
    width: '100%',
    height: '100%'
  };
};

fullscreen = function(zIndex) {
  return {
    position: 'fixed',
    top: 0,
    left: 0,
    zIndex: zIndex
  };
};

bigButton = function(color) {
  return {
    backgroundColor: color,
    borderWidth: 2,
    borderColor: color,
    height: 50,
    width: 210,
    fontSize: 20
  };
};

module.exports.index = {
  logo: {
    jade: {
      li: {
        '#logo': 'Getber'
      }
    },
    absurd: {
      '#logo': {
        height: 50,
        width: 110,
        float: 'left',
        padding: 15,
        fontWeight: '200',
        fontSize: 15,
        color: 'white',
        textAlign: 'center'
      }
    }
  },
  layout: {
    jade: {
      '+navbar': '',
      '#wrapper': {
        '+sidebar': '',
        '+yield': ''
      }
    },
    absurd: {
      body: {
        backgroundColor: '#ddd'
      }
    },
    navbar: {
      sidebar: true,
      login: true,
      menu: 'home map calendar request log help'
    }
  },
  layout_naked: {
    jade: '+yield'
  },
  main: {
    label: 'main',
    router: {
      path: '/',
      layoutTemplate: 'layout_naked'
    },
    jade: {
      '#bg': '',
      '#screen-bg': '',
      '#video': '',
      '.logo#logo-left': 'get',
      '.logo#logo-right': 'ber',
      '#hero': {
        '#hero-copy': 'Safeguard your family rides',
        '.copy#e1': 'For parents',
        '.copy#e2': {
          '+button(label="Connect with UBER")': '',
          '+br(height="2")': ''
        },
        '.copy#e3': 'For 18 years or yonger',
        '.copy#e4': {
          '+button(label="Sign up for Teens")': ''
        }
      }
    },
    events: {
      'click #connect-with-uber': function() {
        return Router.go('/forward/uber_oauth');
      }
    },
    absurd: function() {
      return {
        '#bg': [
          fullscreen(-100), fullsize(), {
            backgroundColor: '#333'
          }
        ],
        '#screen-bg': [fullscreen(-10), fullsize(), this.Settings.screen_bg],
        '#bg-video': [
          fullscreen(-100), {
            height: '100.0%',
            marginLeft: 0,
            display: 'block'
          }
        ],
        '#video': {
          height: 50
        },
        '.logo': {
          marginTop: 60,
          fontSize: 40,
          color: 'white',
          padding: 2,
          display: 'inline'
        },
        '#logo-left': {
          marginLeft: 80,
          backgroundColor: 'blue'
        },
        '#logo-right': {
          marginLeft: 0,
          backgroundColor: 'green'
        },
        '#connect-with-uber': bigButton('blue'),
        '#sign-up-for-teens': bigButton('green'),
        '.copy': {
          marginLeft: 80,
          textAlign: 'left',
          fontSize: 32,
          color: 'white',
          textShadow: '1px 1px 5px #000'
        },
        '#hero': {
          width: 700,
          paddingBottom: 20,
          backgroundColor: 'rgba(255,255,255,0.15)'
        },
        '#hero-copy': {
          marginTop: 40,
          marginLeft: 80,
          textAlign: 'left',
          fontSize: 48,
          color: 'white',
          textShadow: '1px 1px 3px #000'
        }
      };
    },
    eco: function() {
      return {
        hero: function() {
          return this.Settings.lander.hero;
        }
      };
    },
    on$Ready: function() {
      return $(this).resize(function() {
        var window_height, window_width;
        if (movie && (window_width = $(this).width()) / (window_height = $(this).height()) > 1.78) {
          movie.remove('height').set('width', '100%');
          return $video.css('margin-left', '').css('margin-top', px((window_height - $video.height()) / 2));
        } else if (movie) {
          movie.remove('width').set('height', '100%');
          return $video.css('margin-top', '').css('margin-left', px((window_width - $video.width()) / 2));
        }
      });
    },
    onStartup: function() {
      return this.movie = x.style('#bg-video');
    },
    onRendered: function() {
      var video;
      $('body').css('background-image', 'url("/screen-bg.png"))');
      video = "<video id=\"bg-video\" preload=\"auto\" autoplay=\"true\" loop=\"loop\" muted=\"muted\" volume=\"0\" src=\"/uber.mp4\">\n    <source src=\"/uber.mp4\" type=\"video/mp4\">\n</video>";
      this.$video = $(video).insertAfter('#video');
      return x.timeout(100, function() {
        return $(this).resize();
      });
    },
    onDestroyed: function() {
      return $('body').css('background-image', '');
    }
  },
  home: {
    label: 'Home',
    sidebar: 'sidebar_home',
    router: {
      path: 'home'
    },
    jade: {
      '#contentWrapper': {
        'h2#title': 'Sign up with UBER',
        '+button(label="Connect with UBER")': '',
        '.col-md-6#e3': 'See you soon{{hello}}',
        '#items': {
          '.col-md-11#pack': {
            'each items': {
              '+item': ''
            }
          }
        }
      }
    },
    eco: function() {
      return {
        oauth: function() {
          return x.oauth('uber');
        }
      };
    },
    methods: {
      hello: function(name) {
        return 'Hello ' + name + '!';
      },
      uber_oauth: function() {
        return x.oauth('uber');
      }
    },
    helpers: {
      items: function() {
        return db.Items.find({}, {
          sort: {
            created_time: -1
          }
        });
      },
      hello: function() {
        return Session.get('hello');
      }
    },
    events: {
      'click #connect-with-uber': function() {
        return Router.go('/forward/uber_oauth');
      }
    },
    absurd: {
      '#items .item': {
        backgroundColor: 'white',
        width: 240,
        height: 240,
        float: 'left',
        margin: 6
      },
      '#title': {
        width: 500
      },
      '#name': {
        width: 200
      },
      '#address': {
        width: 400
      }
    },
    onCreated: function() {
      Meteor.call('hello', 'world', function(e, result) {
        return Session.set('hello', result);
      });
      return Meteor.call('uber_oauth', function(e, result) {
        return Session.set('uber_oauth', result);
      });
    },
    onRendered: function() {
      x.timeout(40, function() {
        return $('#pack').masonry({
          itemSelector: '.item',
          columnWidth: 126
        });
      });
      return ('title name address'.split(' ')).map(function(edit) {
        return $('#' + edit).editable();
      });
    }
  },
  sidebar_home: x.sidebar(['home', 'calendar', 'help']),
  world: {
    label: 'Hello',
    jade: {
      h1: '{{a}} world'
    }
  },
  history: {
    label: 'Ride History',
    router: {
      path: 'history'
    },
    jade: ' '
  },
  location: {
    lable: 'Locations',
    router: {
      path: 'location'
    }
  },
  profile: {
    lable: 'Profile',
    sidebar: 'sidebar_profile',
    router: {
      path: 'profile'
    },
    jade: {
      '#contentWrapper': {
        'with user': {
          '| {{name}}': '',
          '| {{phone}}': ''
        }
      }
    },
    helpers: {
      user: function() {
        return {
          name: 'Isaac Han',
          phone: 'xxx-xxxx'
        };
      },
      access_token: function() {
        return 1;
      }
    }
  },
  item: {
    jade: ".item(style='height:{{height}}px;color:{{color}}')"
  },
  submit: {
    label: 'Submit',
    router: {
      path: 'submit'
    },
    jade: {
      h2: 'Connected',
      '+button(label="Add rider")': '',
      p: 'access_token is {{token}} {{output}}'
    },
    helpers: {
      token: function() {
        return x.hash().access_token;
      },
      output: function() {
        return JSON.stringify(Session.get('uber_profile'), null, 4);
      }
    },
    onCreated: function() {
      return x.call('uber_profile', {
        token: x.hash().access_token
      });
    },
    absurd: {
      '#add-rider': {
        backgroundColor: 'green',
        borderWidth: 2,
        borderColor: 'green',
        height: 30,
        width: 150,
        fontSize: 12
      }
    },
    events: {
      'click #add-rider': function() {
        return console.log('add rider');
      }
    }
  },
  __vehicle: {
    label: 'Vehicle',
    sidebar: 'sidebar_vehicle',
    router: {
      path: 'vehicle'
    },
    jade: {
      '#contentWrapper': {
        h1: 'You vehicle information',
        br: '',
        '.col-sm-7': {
          'each items': {
            '+form': '',
            br: ''
          }
        }
      }
    },
    helpers: {
      items: function() {
        return [
          {
            label: 'Maker',
            id: 'maker',
            title: 'Car manufacturer',
            icon: 'mobile'
          }, {
            label: 'Model',
            id: 'model',
            title: 'Year of the model',
            icon: 'mobile'
          }, {
            label: 'Color',
            id: 'color',
            title: 'Color of your vehicle',
            icon: 'mobile'
          }
        ];
      }
    },
    events: x.popover('maker model color'.split(' '))
  },
  popover_maker: {
    jade: {
      ul: {
        li: 'manufacturer in 20 characters'
      }
    }
  },
  popover_model: {
    jade: {
      ul: {
        li: 'For digit'
      }
    }
  },
  popover_color: {
    jade: {
      ul: {
        li: 'White or black only'
      }
    }
  },
  sidebar_vehicle: x.sidebar('home map calendar request vehicle log help'.split(' ')),
  map: {
    label: 'Map',
    sidebar: 'sidebar_map',
    router: {
      path: 'map'
    },
    jade: '#map-canvas',
    absurd: {
      '#map-canvas': {
        height: '100%',
        padding: 0,
        margin: 0
      }
    },
    onRendered: function() {
      google.maps.event.addDomListener(window, 'load', Pages.map.map_init);
      return x.timeout(10, Pages.map.map_init);
    },
    map_init: function() {
      return new google.maps.Map(document.getElementById('map-canvas'), {
        disableDefaultUI: true,
        zoom: 11,
        center: {
          lat: 53.52,
          lng: -113.5
        }
      });
    }
  },
  sidebar_map: x.sidebar('home map calendar request vehicle log help'.split(' ')),
  calendar: {
    label: 'Calendar',
    router: {},
    jade: {
      '#contentWrapper': {
        '#containerCalendar': {
          '.scrollspy#top': '&nbsp;',
          '#items': '',
          '.scrollspy#bottom': '&nbsp;'
        }
      }
    },
    onRendered: function() {
      var this_month;
      x.calendar(fym, this_month = moment().format(fym));
      $('#top').data({
        id: this_month
      });
      return x.scrollSpy({
        enter: {
          top: function() {
            return x.calendar(moment($('#top').data('id'), fym).subtract(1, 'month').format(fym));
          },
          bottom: function() {
            return x.calendar(moment($('#bottom').data('id'), fym).add(1, 'month').format(fym));
          }
        }
      });
    },
    styl: {
      '#containerCalendar': {
        width: calendar_size,
        maxWidth: calendar_size
      },
      h2: {
        color: 'black',
        display: 'block'
      },
      '.everyday': {
        position: 'relative',
        width: date_box_size,
        height: date_box_size,
        float: 'left',
        padding: 8,
        backgroundColor: 'white',
        margin: 2
      },
      '.month': {
        display: 'block',
        height: calendar_size
      },
      '.spacer': {
        lineHeight: 10
      }
    }
  },
  log: {
    label: 'Log',
    router: {
      path: 'log'
    },
    jade: '#log-canvas',
    onRendered: function() {
      return $('#log-canvas').html('<object id="full-screen" data="http://localhost:8778/"/>');
    },
    absurd: {
      '#log-canvas': {
        height: '100%',
        width: '100%'
      },
      '#full-screen': {
        height: '100%',
        width: '100%'
      }
    }
  },
  policy: {
    label: 'Policy',
    router: {
      path: 'policy'
    },
    jade: {
      h2: 'Privacy Policy'
    }
  },
  uber: {
    label: 'uber',
    router: {
      path: 'uber'
    },
    jade: {
      h2: 'Uber'
    }
  },
  redirect: {
    label: 'redirect',
    router: {
      path: 'redirect'
    },
    jade: {
      h2: 'redirect'
    }
  },
  day: {
    collection: 'calendar',
    jade: x.list('init title date day event'),
    helpers: {
      date: function() {
        return moment(this.id, 'YYYYMMDD').format('D');
      },
      day: function() {
        return moment(this.id, 'YYYYMMDD').format('ddd');
      },
      title: function() {
        var _ref;
        return ((_ref = db.Calendar.findOne({
          id: this.id
        })) != null ? _ref['title'] : void 0) || 'Title';
      },
      event: function() {
        return '';
      },
      init: function() {
        x.position({
          parentId: this.id,
          "class": 'title',
          top: 14
        }, x.position({
          parentId: this.id,
          "class": 'event',
          top: 45
        }, x.position({
          parentId: this.id,
          "class": 'date',
          top: 5,
          left: date_box_size - 35
        })));
        x.position({
          parentId: this.id,
          "class": 'day',
          top: 28,
          left: date_box_size - 37
        });
        return '';
      }
    },
    absurd: {
      '.init': {
        display: 'none'
      },
      '.title': {
        display: 'inline',
        fontWeight: '100'
      },
      '.date': {
        display: 'inline',
        fontWeight: '600',
        fontSize: '14pt',
        width: 24,
        textAlign: 'right'
      },
      '.day': {
        display: 'table',
        fontWeight: '100',
        float: 'right',
        width: 24,
        textAlign: 'right',
        color: '#444',
        fontSize: '8pt'
      },
      '.event': {
        resize: 'none',
        fontWeight: '100'
      },
      '.row#day01': {
        marginBottom: 0
      }
    }
  },
  gmap: {
    jade: {
      'input(id="pac-input", class="controls", type="text", placeholder="Enter a location")': '',
      '#map-canvas': ''
    },
    onRendered: function() {
      google.maps.event.addDomListener(window, 'load');
      return x.timeout(10, function() {
        return x.gmapInit({
          disableDefaultUI: true,
          mapTypeId: "roadmap",
          zoom: 11,
          center: {
            lat: 53.52,
            lng: -113.5
          }
        });
      });
    }
  },
  request: {
    label: 'Request',
    router: {
      path: 'request'
    },
    jade: {
      '#contentWrapper': {
        h1: 'Request',
        br: '',
        '.col-sm-9#e11': {
          'each items': {
            '+form': '',
            br: ''
          }
        },
        '.col-sm-9#e12': {
          'input(type="tel",id="mobile-number",class="form-control")': '',
          br: ''
        },
        '.col-sm-9#e13': {
          '+gmap': ''
        }
      }
    },
    styl: {
      '#e13': {
        height: 300
      }
    },
    helpers: {
      items: function() {
        return [
          {
            label: 'Phone',
            id: 'phone',
            title: 'Phone Number',
            icon: 'mobile'
          }, {
            label: 'Date',
            id: 'datepicker',
            title: 'Pick your date',
            icon: 'calendar'
          }, {
            label: 'Name',
            id: 'name',
            title: 'Your name',
            icon: 'user'
          }
        ];
      }
    },
    __helpers: {
      items: function() {
        return ['label, id, title, icon', 'Name    |name    |Your name          |user', 'Phone   |phone   |Phone Number       |mobile', 'Address |address |Your home Zip code |envelope'];
      }
    },
    events: x.popover('name phone address'.split(' ')),
    onRendered: function() {
      var datepicker;
      $('#datepicker').css("opacity", '50%').datepicker();
      datepicker = document.querySelector('#datepicker');
      datepicker.addEventListener('focus', function() {
        console.log('focus');
        datepicker.removeEventListener('focus');
        return x.timeout(100, function() {
          return $('.ui-datepicker-header').removeClass('ui-corner-all ui-widget-header');
        });
      });
      x.timeout(100, function() {
        return $('#mobile-number').intlTelInput({
          preferredCountries: ["ca", "us"],
          utilsScript: "/utils.js"
        });
      });
      return $('#ui-datepicker-div').removeClass('ui-corner-all');
    }
  },
  popover_name: {
    jade: {
      ul: {
        'li Write your name.': '',
        'li No longer then 12 letters.': ''
      }
    }
  },
  popover_phone: {
    jade: {
      ul: {
        li: 'Write your phone number.'
      }
    }
  },
  popover_address: {
    jade: {
      ul: {
        li: 'Write your zipcode.'
      }
    }
  },
  help: {
    label: 'Help',
    router: {},
    jade: {
      '#contentWrapper': {
        h1: 'style',
        pre: '{{output}}'
      }
    },
    helpers: {
      output: function() {
        var sheets, _i, _ref, _results;
        sheets = document.styleSheets;
        return ((function() {
          _results = [];
          for (var _i = 0, _ref = sheets.length; 0 <= _ref ? _i <= _ref : _i >= _ref; 0 <= _ref ? _i++ : _i--){ _results.push(_i); }
          return _results;
        }).apply(this).map(function(i) {
          var rules, _i, _ref, _results;
          return (sheets[i] != null) && ((rules = sheets[i].cssRules) != null) && ((function() {
            _results = [];
            for (var _i = 0, _ref = rules.length; 0 <= _ref ? _i <= _ref : _i >= _ref; 0 <= _ref ? _i++ : _i--){ _results.push(_i); }
            return _results;
          }).apply(this).map(function(j) {
            return (rules[j] != null) && ("" + i + ":" + j + "\n") + rules[j].cssText;
          })).join('\n');
        })).join('\n');
      }
    }
  }
};
