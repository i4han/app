template(name="home")
    .row
        h1 Just very good Title
    .row#items
        each items
            .item
                +item

template(name="item")
    img(src="{{url}}" height="320" width="320")

template(name="about")
    .row
        +x3d
    .primary-content
        +hello
        br.double-line
        +dialog
    .primary-content
        +color_list

template(name="profile")
    .primary-content    
        .col-sm-4
        .col-sm-6
            br.double-line
            each fields
                +formField
                br.half-line
        .col-sm-2
            br  

template(name="popover_name")
    ul 
        li Write your name.
        li No longer then 12 letters.

template(name="help")
    .primary-content
        .h2 Debug..  
    .primary-content#debug

template(name="color_list")
    ul
        each colors
            +color_info
        else
            | No colors yet.
    button.btn.btn-primary Like

template(name="color_info")
    li(class="{{maybe_selected}}") {{name}} {{likes}} 

template(name="connect")
    | Connect
    br.single-line
    a(href="{{instagram_connect}}") 
        | Connect with Instagram
    input.btn.btn-default(type="button" value="Click")

template(name="dialog")
    button.btn(href="#myModal" role="button" data-toggle="modal") Modal
    .modal.fade#myModal(tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true")
        .modal-dialog: .modal-content
            .modal-header
                button.close(type="button" data-dismiss="modal" aria-hidden="true") ×
                h3#myModalLabel {{modalHeader}}
            .modal-body
                p {{modalBody}}
            .modal-footer
                button.btn(data-dismiss="modal" aria-hidden="true") {{modalCloseButton}}
                button.btn.btn-primary {{modalActionButton}}

template(name="_resetPasswordDialog")
    if inResetPasswordFlow
        .modal#login-buttons-reset-password-modal: .modal-dialog: .modal-content
            .modal-header
                button.close(type="button" data-dismiss="modal" aria-hidden="true") &times;
                h4.modal-title Reset your password
            .modal-body
                input.form-control#reset-password-new-password(type="password" placeholder="New Password")
                +_loginButtonsMessages
            .modal-footer
                a.btn.btn-default#login-buttons-cancel-reset-password Close
                button.btn.btn-primary#login-buttons-reset-password-button Set password

template(name="_enrollAccountDialog")
    if inEnrollAccountFlow
        .modal#login-buttons-enroll-account-modal: .modal-dialog: .modal-content
            .modal-header
                button.close(type="button" data-dismiss="modal" aria-hidden="true") &times;
                h4.modal-title Choose a password
            .modal-body
                input.form-control#enroll-account-password(type="password" placeholder="New Password")
                +_loginButtonsMessages
            .modal-footer
                a.btn.btn-default#login-buttons-cancel-enroll-account-button Close
                button.btn.btn-primary#login-buttons-enroll-account-button Set Password

template(name="_configureLoginServiceDialog")
    if visible
        .modal-dialog#configure-login-service-dialog-modal: .modal-content
            .modal-header
                h4.modal-title Configure Service
            .modal-body: .accounts-dialog.accounts-centered-dialog#configure-login-service-dialog
                +configurationSteps
                p Now, copy over some details.
                p: table
                    colgroup
                        col.configuration_labels(span="1")
                        col.configuration_inputs(span="1")
                    each configurationFields
                        tr
                            td: label(for="configure-login-service-dialog-{{property}}") {{label}}
                            td: input(id="configure-login-service-dialog-{{property}}" type="text")
            .modal-footer(class="new-section")
                .login-button.btn.btn-danger.configure-login-service-dismiss-button
                    | I'll do this later
                .login-button.btn.btn-success.login-button-configure#configure-login-service-dialog-save-configuration(class="{{#if saveDisabled}}login-button-disabled{{/if}}")
                    | Save configuration
        .modal-backdrop.in

template(name="formField")
    if visible
        .input-group.margin-bottom-sm
            span.input-group-addon: i.fa.fa-fw(class="fa-{{icon}}")
            input.form-control(id="{{name}}" type="{{type}}" placeholder="{{label}}" title="{{title}}" data-toggle="popover" data-trigger="hover" data-placement="right" data-html="true")

template(name="layout")
    +navbar
    .content
        br.triple-line
        +yield
    .footer
        +footer
    if 0
        .container-fluid#main-body: .row

template(name="navbar")
    .navbar.navbar-default.navbar-fixed-top: .container
        .navbar-left 
            ul.nav.navbar-nav
                li: a(href="{{pathFor 'home'}}") Home
                li: a(href="{{pathFor 'profile'}}") Profile
                li: a(href="{{pathFor 'connect'}}") Connect
                li: a(href="{{pathFor 'help'}}") Help
        .navbar-right
            +loginButtons

template(name="page_nav")
    ul#page-nav
        li: a Hello
        li: a World
        li: a This
        li: a Wesite
        li: a Menu

template(name="footer")
    .content
        .row    
            br.triple-line
            center About Help Blog Terms info Businesses © 2014 Hello

template(name="_loginButtonsLoggedInDropdown")
    li.dropdown#login-dropdown-list
        a.dropdown-toggle#login-id(data-toggle="dropdown") {{displayName}}
            i.fa(class="fa-chevron-down")
        if inMessageOnlyFlow
            .dropdown-menu
                +_loginButtonsMessages
        else if inChangePasswordFlow
            .dropdown-menu
                +_loginButtonsChangePassword
        else
            .dropdown-menu#logged-in-dropdown
                +_loginButtonsLoggedInDropdownActions

template(name="_loginButtonsLoggedOut")
    if services
        if configurationLoaded
            if dropdown
                +_loginButtonsLoggedOutDropdown
            else
                with singleService
                    .login-buttons-with-only-one-button
                        if loggingIn
                            +_loginButtonsLoggingInSingleLoginButton
                        else
                            +_loginButtonsLoggedOutSingleLoginButton
    else
        .no-services No login services configured

template(name="_loginButtonsLoggedIn")
    if dropdown
        +_loginButtonsLoggedInDropdown
    else
        .login-buttons-with-only-one-button
            +_loginButtonsLoggedInSingleLogoutButton

template(name="_loginButtonsLoggedOutPasswordService")
    if inForgotPasswordFlow
        +_forgotPasswordForm
    else
        each fields
            +formField
        +_loginButtonsMessages
        button.btn.btn-primary#login-buttons-password(type="button")
            if inSignupFlow
                | Create
            else
                | Sign in
        if inLoginFlow
            #login-other-options
                br.single-line
                if showForgotPasswordLink
                    a.dropdown-menu-link#forgot-password-link Forgot password?
                    br.half-line
                if showCreateAccountLink
                    a.dropdown-menu-link#signup-link Create account
        else
            +_loginButtonsBackToLoginLink

template(name="_loginButtonsLoggedOutDropdown")
    li.dropdown#login-dropdown-list
        a.dropdown-toggle(data-toggle="dropdown")
            | Sign In
            i.fa.fa-chevron-down
        .dropdown-menu
            +_loginButtonsLoggedOutAllServices

template(name="_loginButtonsLoggedOutAllServices")
    each services
        unless hasPasswordService
            +_loginButtonsMessages
        if isPasswordService
            if hasOtherServices
                +_loginButtonsLoggedOutPasswordServiceSeparator
            +_loginButtonsLoggedOutPasswordService
        else
            +_loginButtonsLoggedOutSingleLoginButton

template(name="_loginButtonsLoggedInDropdownActions")
    li: a#login-buttons-profile
        i.fa.dropdown-menu-icon.fa-list-alt 
        | Profile
    li: a#login-buttons-settings
        i.fa.dropdown-menu-icon.fa-cog
        | Settings
    li: a#login-buttons-change-password
        i.fa.dropdown-menu-icon.fa-key
        | Change Password
    li.divider
    li: a#login-buttons-logout
        i.fa.dropdown-menu-icon.fa-sign-out
        | Sign Out

template(name="_loginButtonsMessages")
    br.half-line
    if errorMessage
        .alert.alert-danger {{errorMessage}}
    if infoMessage
        .alert.alert-success.no-margin {{infoMessage}}

template(name="_loginButtonsLoggedOutSingleLoginButton")
    .login-text-and-button
        .login-button.single-login-button(class="{{#if configured}}btn btn-info {{else}}configure-button btn btn-danger{{/if}}", id="login-buttons-{{name}}")
            .login-image(id="login-buttons-image-{{name}}")
                if configured
                    span.text-besides-image(class="sign-in-text-{{name}}") Sign in with {{capitalizedName}}
                else
                    span.text-besides-image(class="configure-text-{{name}}") Configure {{capitalizedName}} Login

template(name="_loginButtonsMessagesDialog")
    if visible
        .accounts-dialog.accounts-centered-dialog#login-buttons-message-dialog
            +_loginButtonsMessages
            .login-button#messages-dialog-dismiss-button Dismiss

template(name="_justVerifiedEmailDialog")
    if visible
        .accounts-dialog.accounts-centered-dialog
            | Email verified
            .login-button#just-verified-dismiss-button Dismiss

template(name="_loginButtonsLoggingInPadding")
    unless dropdown
        .login-buttons-padding
            .login-button.single-login-button#login-buttons-logout(style="visibility: hidden;") &nbsp;
    else
        .login-buttons-padding

template(name="loginButtons")
    .login-buttons-dropdown-align-right#login-buttons
    if currentUser
        if loggingIn
            if dropdown 
                +_loginButtonsLoggingIn
            else
                .login-buttons-with-only-one-button
                    +_loginButtonsLoggingInSingleLoginButton
        else
            +_loginButtonsLoggedIn
    else
        +_loginButtonsLoggedOut        

template(name="_loginButtonsChangePassword")
    each fields
        +formField
    +_loginButtonsMessages
    button.btn.btn-primary#login-buttons-do-change-password Change password
    button.btn.btn-default.login-close#login-button-back-to-menu Close

template(name="_loginButtonsBackToLoginLink")
    button.btn.btn-default#back-to-login-link Back to sign in

template(name="_forgotPasswordForm")
    .login-form
        .forgot-password-email-label-and-input 
            .input-group.margin-bottom-sm
                span.input-group-addon: i.fa.fa-envelope-o.fa-fw
                input.form-control#forgot-password-email(type="email" placeholder="E-mail")
        +_loginButtonsMessages
        button.btn.btn-primary.login-button-form-submit#login-buttons-forgot-password Reset Password
        +_loginButtonsBackToLoginLink

template(name="_loginButtonsLoggedInSingleLogoutButton")
    .login-text-and-button: .login-display-name {{displayName}}
    .login-button.single-login-button#login-buttons-logout Sign Out

template(name="_loginButtonsLoggingIn")
    +_loginButtonsLoggingInPadding
    .loading &nbsp;
    +_loginButtonsLoggingInPadding

template(name="_loginButtonsLoggingInSingleLoginButton")
    .login-text-and-button
        +_loginButtonsLoggingIn

template(name="_loginButtonsLoggedOutPasswordServiceSeparator")
    .or
        span.hline &nbsp; &nbsp; &nbsp;
        span.or-text or
        span.hline &nbsp; &nbsp; &nbsp;

